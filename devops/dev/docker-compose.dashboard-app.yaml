version: '3.8'

networks:
  dashboard_app_network:
    driver: bridge

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ../../apps/dashboard_app/.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
        - dashboard_app_network

  streamlit:
    build:
      context: ../../apps/dashboard_app
    ports:
      - "8501:8501"
    env_file:
      - ../../apps/dashboard_app/.env.dev
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../../apps/dashboard_app:/app
    entrypoint: /app/.entrypoint.sh
    networks:
      - dashboard_app_network

  backend:
    build: 
      context: ../../apps/dashboard_app
      dockerfile: dev/app.Dockerfile
    restart: always
    volumes:
      - .:/src
    env_file:
      - ../../apps/dashboard_app/.env
    ports:
      - "8000:8000"
    networks:
      - dashboard_app_network

volumes:
  postgres_data:
