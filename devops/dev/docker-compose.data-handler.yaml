version: '3.8'

networks:
  data_handler_network:
    driver: bridge

services:
  backend:
    build:
      context: ../../apps
      dockerfile: data_handler/Dockerfile
    restart: always
    volumes:
      - ../../apps/:/app
    env_file:
      - ../../apps/data_handler/.env.dev
    expose:
      - "8000"
    networks:
      - data_handler_network
    depends_on:
      - db

  celery:
    build:
      context: ../../apps
      dockerfile: data_handler/Dockerfile
    command: celery -A data_handler.celery_app.celery_conf worker --loglevel=INFO
    environment:
      - PYTHONPATH=/app
    volumes:
      - ../../apps/:/app
    networks:
      - data_handler_network

  celery_beat:
    build:
      context: ../../apps/data_handler/nginx
      dockerfile: Dockerfile
    command: celery -A celery_app.celery_conf beat --loglevel=INFO
    environment:
      - PYTHONPATH=/app
    volumes:
      - ../../apps:/app
    networks:
      - data_handler_network

  db:
    image: postgres:16
    container_name: postgres_dev
    environment:
      POSTGRES_DB: data_handler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../apps/data_handler/init-db:/docker-entrypoint-initdb.d # Automatically run initialization scripts
    networks:
      - data_handler_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
